How did viewing a diff between two versions of a file help
  you see the bug that was introduced?

  -diff helped by pointing out what lines in the file had changed

How could having easy access to the entire history of a file
  make you a more efficient programmer in the long term?

  -It can make a more efficient programmer by allowing the
    programmer to have access to revisions when an error or bug is
    introduced to more easily find that bug. Also would allow a
    programmer to remove certain changed or push them to separate
    files/projects.

What do you think are the pros and cons of manually choosing when
  to create a commit, like you do in Git, vs having versions
  automatically saved, like Google Docs does?

  -Pros: having access to all previous changes and a visual history
    of those changes.
   Cons: you can forget when to commit or commit to little or too much

Why do you think some version control systems. like Git, allow
  saving multiple files in one commit, while others, like Google
  Docs, treat each file separately?

  -For version control systems like git your more likely to need the
    the multiple file in one commit while for systems like google Docs
    would not need to have the same systems in place.

How can you use the commands git log and git diff to view the history
  of files?

  -You can use these files to, with git log, see all commits and then,
    with git diff, see what has been changed in those files.

How might using version control make you more confident to make changes
  that could break something?

  -version control allows you to reset after you make a breaking change

What do you want to try using Git for?

  -I want to use it to put all my programming in version control systems
